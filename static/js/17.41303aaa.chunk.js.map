{"version":3,"sources":["pages/Dashboard.js"],"names":["pieChartData","key","y","color","lineChart","raised","pending","i","push","parseInt","Math","sin","abs","values","area","Dashboard","props","state","wallet","companyId","clients","topInvoices","isBlockedClientsCollapsed","fetchAccount","a","loadWeb3","loadAccount","account","this","setState","getCompanyId","history","currentCompanyId","getAllClients","forEach","client","clientAddr","getCompanyById","company","getAllInvoicesByClient","clientId","ids","id","getInvoiceDetails","data","invoice","isBlocked","discount","name","length","newClient","console","log","getClients","b","payment","dueAmount","invoices","sort","compareFilterTopInvoices","slice","pathname","invoiceId","updateInvoiceWorkCompletedStatus","dialog","showAlert","window","location","reload","topPendingInvoices","blockedClients","filterTopInvoices","className","style","width","src","avatar2","alt","email","invoiceDate","dueDate","workCompleted","web3","utils","fromWei","border","onClick","viewDetails","updateWorkStatus","ref","component","numInvoices","to","md","xl","Body","Header","Title","as","height","type","datum","x","React","createElement","NVD3Chart","xAxis","tickFormat","d","axisLabel","yAxis","parseFloat","toFixed","renderEnd","responsive","hover","in","Component"],"mappings":"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","file":"static/js/17.41303aaa.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Card, Table, Button, Collapse} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport Aux from \"../hoc/_Aux\";\n\n\nimport avatar2 from '../assets/images/user/avatar-2.jpg';\n\nimport {loadWeb3, loadAccount, getCompanyId, getInvoiceDetails,\n        web3, getAllClients, getCompanyById, getAllInvoicesByClient,updateInvoiceWorkCompletedStatus} from \"../services/web3\";\n\nimport NVD3Chart from 'react-nvd3';\nimport Dialog from 'react-bootstrap-dialog';\n\n\nconst pieChartData = [\n    {key: \"50% Advance\", y: 40, color: \"#1ddec5\"},\n    {key: \"100% Advance\", y: 30, color: \"#1dcfda\"},\n    {key: \"100% Postwork\", y: 30, color: \"#20c997\"},\n];\n\nfunction lineChart() {\n    var raised = [],\n        pending = [];\n    for (var i = 0; i < 10; i++) {\n        raised.push({\n            'x': i,\n            'y': parseInt(15*(Math.sin(i/1.5) * 0.25 + 0.5))\n        });\n        pending.push({\n            'x': i,\n            'y': parseInt(3/Math.abs((Math.sin(i/20))+0.5))\n        });\n    }\n    return [\n        {\n            values: raised,\n            key: 'Invoices Raised',\n            color: '#239f1c',\n            area: true\n        },\n        {\n            values: pending,\n            key: 'Pending Invoices',\n            color: '#F45d55',\n            area: true\n        }\n    ];\n}\n\n\nclass Dashboard extends React.Component {\n\n    constructor (props) {\n        super(props);        \n        this.state = {wallet: '', companyId: 0, clients: [], topInvoices: [], isBlockedClientsCollapsed: false};\n        this.fetchAccount();\n    }\n\n    async fetchAccount(){\n        await loadWeb3();\n        const account = await loadAccount();\n        this.setState({wallet: account});\n        const companyId = await getCompanyId();\n        if(companyId > 0) {\n            this.setState({companyId: companyId});\n        }\n        else{\n            this.props.history.push('/');\n        }\n    }\n\n    /*Set both clients and topInvoices state vars*/\n    async getClients(){\n        await this.fetchAccount();\n        const currentCompanyId = this.state.companyId;\n        try{\n            const clients = await getAllClients();\n            clients.forEach(async client => {\n                const companyId = await getCompanyId(client.clientAddr);\n                const company = await getCompanyById(companyId);\n\n                const ids = await getAllInvoicesByClient(currentCompanyId, client.clientId);\n                ids.forEach(async id => {\n                    const data = await getInvoiceDetails(id);\n                    const invoice = {'id': id, 'data': data}\n                    this.setState({\n                        topInvoices:[...this.state.topInvoices, invoice]\n                    });\n                })\n\n                const data = {\n                    \"clientId\" : client.clientId,\n                    \"clientAddr\" : client.clientAddr,\n                    \"isBlocked\" : client.isBlocked,\n                    \"discount\" : client.discount,\n                    \"name\" : company.name,\n                    \"numInvoices\": ids.length,\n                }\n                const newClient = {'id': client.clientId, 'data': data}\n                this.setState({\n                    clients: [...this.state.clients, newClient]\n                });\n    \n            })\n            \n\n        } catch(e){\n            console.log(e);\n        }\n    }\n\n    componentDidMount() {\n        this.getClients();\n    }  \n\n    compareFilterTopInvoices(a, b){\n        if(a.data.payment.dueAmount < b.data.payment.dueAmount) return 1;\n        if(a.data.payment.dueAmount > b.data.payment.dueAmount) return -1;\n        return 0;\n    }\n\n    // Sorts in desc order based on dueAmount. Returns only top 5 results\n    filterTopInvoices(){\n        let invoices = this.state.topInvoices;\n        invoices.sort(this.compareFilterTopInvoices);\n        return invoices.slice(0,5);\n    }\n\n    viewDetails(invoice) {\n        this.props.history.push({\n            pathname: '/view-invoice/',\n            state: { invoice: invoice }\n        })\n    }\n    async updateWorkStatus(invoiceId) {\n        const result = await updateInvoiceWorkCompletedStatus(invoiceId);\n        if(result) {\n            this.dialog.showAlert('Success!');\n            window.location.reload();\n        }\n        else {\n            this.dialog.showAlert('Something went wrong!');\n        }\n    }\n    render() {       \n        let topPendingInvoices = [];\n        let clients = [];\n        let blockedClients = [];\n\n\n        let invoices = this.filterTopInvoices();\n        // let pendingInvoices = \n        invoices.forEach(invoice => {\n            topPendingInvoices.push(\n                <tr className=\"unread\" key = {invoice.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <h6 className=\"mb-1\">{invoice.data.client.name}</h6>\n                        <p className=\"m-0\">{invoice.data.client.email}</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>{invoice.data.invoiceDate}</h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-red f-10 m-r-15\"/>{invoice.data.dueDate}</h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">Work Status: &nbsp; \n                        {\n                            invoice.data.workCompleted &&\n                            <span className=\"text-success\">Completed</span>\n                        }\n                        {\n                            !invoice.data.workCompleted &&\n                            <span className=\"text-danger\">Not Completed</span>\n                        }\n                        </h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{web3.utils.fromWei(invoice.data.payment.dueAmount)} ETH due</h6>\n                    </td>\n                    <td>\n                        <button style={{border: 0}} onClick={() => this.viewDetails(invoice)} className=\"label theme-bg2 text-white f-12\">View Details</button>\n                        <button style={{border: 0}} onClick={() => this.updateWorkStatus(invoice.id)} className=\"label theme-bg text-white f-12\">\n                            {\n                                !invoice.data.workCompleted &&\n                                \"Update Progress\"\n                            }\n                            {\n                                invoice.data.workCompleted &&\n                                \"Delete Progress\"\n                            }                            \n                        </button>\n                        <button style={{border: 0}} onClick={() => {this.dialog.showAlert(\"Reminder sent!\")}} className=\"label theme-bg text-white f-12\">Remind</button>\n                        <Dialog ref={(component) => { this.dialog = component }} />\n                    </td>\n                </tr>\n            );\n        })\n\n        this.state.clients.forEach(client => {\n            if(!client.data.isBlocked) {\n                clients.push(\n                <tr className=\"unread\" key = {client.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <h6 className=\"mb-1\">{client.data.clientAddr}</h6>\n                        <p className=\"m-0\">{client.data.name}</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{client.data.numInvoices} Invoices</h6>\n                    </td>\n                    <td>\n                        <Link to={'/clients/'+client.data.clientId} className=\"label theme-bg text-white f-12\">View Details</Link>\n                    </td>\n                </tr>\n                );\n            }\n            else {\n                blockedClients.push(\n                <tr className=\"unread\" key = {client.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <h6 className=\"mb-1\">{client.data.clientAddr}</h6>\n                        <p className=\"m-0\">{client.data.name}</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{client.data.numInvoices} Invoices</h6>\n                    </td>\n                    <td>\n                        <Link to={'/clients/'+client.data.clientId} className=\"label theme-bg text-white f-12\">View Details</Link>\n                    </td>\n                </tr>\n                );\n            }\n        });\n\n        return (\n            <Aux>\n                <Row>\n                    {/* Row 1 */}\n                    <Col md={6} xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Invoices Generated</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-file-text f-30 m-r-5\"/>{this.state.topInvoices.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6} xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Pending Invoices</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-file-text text-c-red f-30 m-r-5\"/>{topPendingInvoices.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Clients</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-users f-30 m-r-5\"/> {this.state.clients.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 2 */}\n                    <Col md={6} xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Types of Invoices Raised <small>Distribution</small></Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                            <NVD3Chart id=\"chart\" height={300} type=\"pieChart\" datum={pieChartData} x=\"key\" y=\"y\"  />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6} xl={6}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Invoices Raised<small> [In last 10 days]</small></Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                <div>\n                                    {\n                                        React.createElement(NVD3Chart, {\n                                            xAxis: {\n                                                tickFormat: function(d){ return d; },\n                                                axisLabel: 'Time (days)'\n                                            },\n                                            yAxis: {\n                                                axisLabel: 'Invoices Count',\n                                                tickFormat: function(d) {return parseFloat(d).toFixed(2); }\n                                            },\n                                            type:'lineChart',\n                                            datum: lineChart(),\n                                            x: 'x',\n                                            y: 'y',\n                                            height: 300,\n                                            renderEnd: function(){\n                                                console.log('renderEnd');\n                                            }\n                                        })\n                                    }\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    {/* Row 3 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Most Important Invoices</Card.Title>\n                            </Card.Header>\n                            <Card.Body className='px-0 py-2'>\n                            <Table responsive hover>\n                            <tbody>\n                                {topPendingInvoices}\n                            </tbody>\n                            </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 4 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Clients <Link to=\"/add-client/\"><i className=\"feather icon-plus-circle f-15 m-r-5\"/></Link></Card.Title>\n                            </Card.Header>\n                            <Card.Body className='px-0 py-2'>\n                            <Table responsive hover>\n                            <tbody>\n                                {clients}\n                            </tbody>\n                            </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 5 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users justify-content-center text-center'>\n                            <Card.Header>\n                                <Button onClick={() => this.setState({ isBlockedClientsCollapsed: !this.state.isBlockedClientsCollapsed })}>\n                                {\n                                    !this.state.isBlockedClientsCollapsed &&\n                                    \"View Blocked clients\"\n                                }\n                                {\n                                    this.state.isBlockedClientsCollapsed &&\n                                    \"Close Blocked clients\"\n                                }\n                                </Button>\n                            </Card.Header>\n                            <Collapse in={this.state.isBlockedClientsCollapsed}>\n                                <div id=\"basic-collapse\">\n                                    <Card.Body className='px-0 py-2'>\n                                        <Table responsive hover>\n                                            <tbody>\n                                                {blockedClients}\n                                            </tbody>\n                                        </Table>\n                                    </Card.Body>\n                                </div>\n                            </Collapse>\n                        </Card>\n                    </Col>\n\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default Dashboard;"],"sourceRoot":""}